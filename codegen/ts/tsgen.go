package ts

import (
	"log"
	"os"
	"path/filepath"
	"unicode"

	"github.com/teal-finance/emo/codegen/core"
)

func genFunc(name string, emoji string, isError bool) string {
	a := []rune(name)
	a[0] = unicode.ToLower(a[0])
	s := string(a)
	return "\t" + s + `(...obj: any[]): string { return this.emo("` + emoji + `", obj); }
`
}

func GenTs() {
	data := core.GetRef()
	fs := ""
	for _, item := range data {
		f := genFunc(item.Name, item.Emoji, item.IsError)
		fs += f + "\n"
	}
	_template := `// Code generated by codegen/ts/tsgen.go; DO NOT EDIT.
	` + TemplateStart + "\n" + fs + TemplateEnd

	_filepath, err := filepath.Abs("./lang/typescript/src/emo_gen.ts")
	if err != nil {
		log.Fatalf("filepath error: %s", err)
	}

	file, err := os.OpenFile(_filepath, os.O_WRONLY|os.O_CREATE|os.O_TRUNC, 0755)
	if err != nil {
		log.Fatalf("failed opening file: %s", err)
	}

	_data := []byte(_template)

	_, err = file.WriteAt(_data, 0)
	if err != nil {
		log.Fatalf("failed writing to file: %s", err)
	}

	log.Printf("File %s created.\n", _filepath)
}
